declare namespace DreamSpace {
    interface IHTMLCanvasElement extends HTMLCanvasElement {
    }
    interface ICanvasRenderingContext2D extends CanvasRenderingContext2D {
    }
    interface IWebGLRenderingContext extends WebGLRenderingContext {
    }
    namespace VDOM {
        class CanvasRenderingContext2D {
            canvas: IHTMLCanvasElement;
            constructor(canvas: Canvas);
            miterLimit: number;
            font: string;
            globalCompositeOperation: string;
            msFillRule: string;
            lineCap: string;
            msImageSmoothingEnabled: boolean;
            lineDashOffset: number;
            shadowColor: string;
            lineJoin: string;
            shadowOffsetX: number;
            lineWidth: number;
            strokeStyle: any;
            globalAlpha: number;
            shadowOffsetY: number;
            fillStyle: any;
            shadowBlur: number;
            textAlign: string;
            textBaseline: string;
            restore(): void;
            setTransform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void;
            save(): void;
            arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void;
            measureText(text: string): TextMetrics;
            isPointInPath(x: number, y: number, fillRule?: string): boolean;
            quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;
            putImageData(imagedata: ImageData, dx: number, dy: number, dirtyX?: number, dirtyY?: number, dirtyWidth?: number, dirtyHeight?: number): void;
            rotate(angle: number): void;
            fillText(text: string, x: number, y: number, maxWidth?: number): void;
            translate(x: number, y: number): void;
            scale(x: number, y: number): void;
            createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): CanvasGradient;
            lineTo(x: number, y: number): void;
            getLineDash(): Array<number>;
            fill(fillRule?: string): void;
            createImageData(imageDataOrSw: any, sh?: number): ImageData;
            createPattern(image: HTMLElement, repetition: string): CanvasPattern;
            closePath(): void;
            rect(x: number, y: number, w: number, h: number): void;
            clip(fillRule?: string): void;
            clearRect(x: number, y: number, w: number, h: number): void;
            moveTo(x: number, y: number): void;
            getImageData(sx: number, sy: number, sw: number, sh: number): ImageData;
            fillRect(x: number, y: number, w: number, h: number): void;
            bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;
            drawImage(image: HTMLElement, offsetX: number, offsetY: number, width?: number, height?: number, canvasOffsetX?: number, canvasOffsetY?: number, canvasImageWidth?: number, canvasImageHeight?: number): void;
            transform(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void;
            stroke(): void;
            strokeRect(x: number, y: number, w: number, h: number): void;
            setLineDash(segments: Array<number>): void;
            strokeText(text: string, x: number, y: number, maxWidth?: number): void;
            beginPath(): void;
            arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;
            createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient;
        }
        class WebGLRenderingContext {
            canvas: IHTMLCanvasElement;
            readonly drawingBufferWidth: number;
            private $__drawingBufferWidth;
            readonly drawingBufferHeight: number;
            private $__drawingBufferHeight;
            constructor(canvas: Canvas);
            viewport(x: number, y: number, width: number, height: number): void;
            getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation;
            bindTexture(target: number, texture: WebGLTexture): void;
            bufferData(target: number, data: ArrayBufferView, usage: number): void;
            bufferData(target: number, data: ArrayBuffer, usage: number): void;
            bufferData(target: number, size: number, usage: number): void;
            depthMask(flag: boolean): void;
            getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;
            vertexAttrib3fv(indx: number, values: number[]): void;
            vertexAttrib3fv(indx: number, values: Float32Array): void;
            linkProgram(program: WebGLProgram): void;
            getSupportedExtensions(): string[];
            bufferSubData(target: number, offset: number, data: ArrayBuffer): void;
            bufferSubData(target: number, offset: number, data: ArrayBufferView): void;
            vertexAttribPointer(indx: number, size: number, type: number, normalized: boolean, stride: number, offset: number): void;
            polygonOffset(factor: number, units: number): void;
            blendColor(red: number, green: number, blue: number, alpha: number): void;
            createTexture(): WebGLTexture;
            hint(target: number, mode: number): void;
            getVertexAttrib(index: number, pname: number): any;
            enableVertexAttribArray(index: number): void;
            depthRange(zNear: number, zFar: number): void;
            cullFace(mode: number): void;
            createFramebuffer(): WebGLFramebuffer;
            uniformMatrix4fv(location: WebGLUniformLocation, transpose: boolean, value: number[]): void;
            uniformMatrix4fv(location: WebGLUniformLocation, transpose: boolean, value: Float32Array): void;
            framebufferTexture2D(target: number, attachment: number, textarget: number, texture: WebGLTexture, level: number): void;
            deleteFramebuffer(framebuffer: WebGLFramebuffer): void;
            colorMask(red: boolean, green: boolean, blue: boolean, alpha: boolean): void;
            compressedTexImage2D(target: number, level: number, internalformat: number, width: number, height: number, border: number, data: ArrayBufferView): void;
            uniformMatrix2fv(location: WebGLUniformLocation, transpose: boolean, value: number[]): void;
            uniformMatrix2fv(location: WebGLUniformLocation, transpose: boolean, value: Float32Array): void;
            getExtension(name: string): Object;
            createProgram(): WebGLProgram;
            deleteShader(shader: WebGLShader): void;
            getAttachedShaders(program: WebGLProgram): WebGLShader[];
            enable(cap: number): void;
            blendEquation(mode: number): void;
            texImage2D(target: number, level: number, internalformat: number, width: number, height: number, border: number, format: number, type: number, pixels: ArrayBufferView): void;
            texImage2D(target: number, level: number, internalformat: number, format: number, type: number, image: HTMLImageElement): void;
            texImage2D(target: number, level: number, internalformat: number, format: number, type: number, canvas: HTMLCanvasElement): void;
            texImage2D(target: number, level: number, internalformat: number, format: number, type: number, video: HTMLVideoElement): void;
            texImage2D(target: number, level: number, internalformat: number, format: number, type: number, pixels: ImageData): void;
            createBuffer(): WebGLBuffer;
            deleteTexture(texture: WebGLTexture): void;
            useProgram(program: WebGLProgram): void;
            vertexAttrib2fv(indx: number, values: number[]): void;
            vertexAttrib2fv(indx: number, values: Float32Array): void;
            checkFramebufferStatus(target: number): number;
            frontFace(mode: number): void;
            getBufferParameter(target: number, pname: number): any;
            texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, width: number, height: number, format: number, type: number, pixels: ArrayBufferView): void;
            texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, format: number, type: number, image: HTMLImageElement): void;
            texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, format: number, type: number, canvas: HTMLCanvasElement): void;
            texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, format: number, type: number, video: HTMLVideoElement): void;
            texSubImage2D(target: number, level: number, xoffset: number, yoffset: number, format: number, type: number, pixels: ImageData): void;
            copyTexImage2D(target: number, level: number, internalformat: number, x: number, y: number, width: number, height: number, border: number): void;
            getVertexAttribOffset(index: number, pname: number): number;
            disableVertexAttribArray(index: number): void;
            blendFunc(sfactor: number, dfactor: number): void;
            drawElements(mode: number, count: number, type: number, offset: number): void;
            isFramebuffer(framebuffer: WebGLFramebuffer): boolean;
            uniform3iv(location: WebGLUniformLocation, v: number[]): void;
            uniform3iv(location: WebGLUniformLocation, v: Int32Array): void;
            lineWidth(width: number): void;
            getShaderInfoLog(shader: WebGLShader): string;
            getTexParameter(target: number, pname: number): any;
            getParameter(pname: number): any;
            getShaderPrecisionFormat(shadertype: number, precisiontype: number): WebGLShaderPrecisionFormat;
            getContextAttributes(): WebGLContextAttributes;
            vertexAttrib1f(indx: number, x: number): void;
            bindFramebuffer(target: number, framebuffer: WebGLFramebuffer): void;
            compressedTexSubImage2D(target: number, level: number, xoffset: number, yoffset: number, width: number, height: number, format: number, data: ArrayBufferView): void;
            isContextLost(): boolean;
            uniform1iv(location: WebGLUniformLocation, v: number[]): void;
            uniform1iv(location: WebGLUniformLocation, v: Int32Array): void;
            getRenderbufferParameter(target: number, pname: number): any;
            uniform2fv(location: WebGLUniformLocation, v: number[]): void;
            uniform2fv(location: WebGLUniformLocation, v: Float32Array): void;
            isTexture(texture: WebGLTexture): boolean;
            getError(): number;
            shaderSource(shader: WebGLShader, source: string): void;
            deleteRenderbuffer(renderbuffer: WebGLRenderbuffer): void;
            stencilMask(mask: number): void;
            bindBuffer(target: number, buffer: WebGLBuffer): void;
            getAttribLocation(program: WebGLProgram, name: string): number;
            uniform3i(location: WebGLUniformLocation, x: number, y: number, z: number): void;
            blendEquationSeparate(modeRGB: number, modeAlpha: number): void;
            clear(mask: number): void;
            blendFuncSeparate(srcRGB: number, dstRGB: number, srcAlpha: number, dstAlpha: number): void;
            stencilFuncSeparate(face: number, func: number, ref: number, mask: number): void;
            readPixels(x: number, y: number, width: number, height: number, format: number, type: number, pixels: ArrayBufferView): void;
            scissor(x: number, y: number, width: number, height: number): void;
            uniform2i(location: WebGLUniformLocation, x: number, y: number): void;
            getActiveAttrib(program: WebGLProgram, index: number): WebGLActiveInfo;
            getShaderSource(shader: WebGLShader): string;
            generateMipmap(target: number): void;
            bindAttribLocation(program: WebGLProgram, index: number, name: string): void;
            uniform1fv(location: WebGLUniformLocation, v: number[]): void;
            uniform1fv(location: WebGLUniformLocation, v: Float32Array): void;
            uniform2iv(location: WebGLUniformLocation, v: number[]): void;
            uniform2iv(location: WebGLUniformLocation, v: Int32Array): void;
            stencilOp(fail: number, zfail: number, zpass: number): void;
            uniform4fv(location: WebGLUniformLocation, v: number[]): void;
            uniform4fv(location: WebGLUniformLocation, v: Float32Array): void;
            vertexAttrib1fv(indx: number, values: number[]): void;
            vertexAttrib1fv(indx: number, values: Float32Array): void;
            flush(): void;
            uniform4f(location: WebGLUniformLocation, x: number, y: number, z: number, w: number): void;
            deleteProgram(program: WebGLProgram): void;
            isRenderbuffer(renderbuffer: WebGLRenderbuffer): boolean;
            uniform1i(location: WebGLUniformLocation, x: number): void;
            getProgramParameter(program: WebGLProgram, pname: number): any;
            getActiveUniform(program: WebGLProgram, index: number): WebGLActiveInfo;
            stencilFunc(func: number, ref: number, mask: number): void;
            pixelStorei(pname: number, param: number): void;
            disable(cap: number): void;
            vertexAttrib4fv(indx: number, values: number[]): void;
            vertexAttrib4fv(indx: number, values: Float32Array): void;
            createRenderbuffer(): WebGLRenderbuffer;
            isBuffer(buffer: WebGLBuffer): boolean;
            stencilOpSeparate(face: number, fail: number, zfail: number, zpass: number): void;
            getFramebufferAttachmentParameter(target: number, attachment: number, pname: number): any;
            uniform4i(location: WebGLUniformLocation, x: number, y: number, z: number, w: number): void;
            sampleCoverage(value: number, invert: boolean): void;
            depthFunc(func: number): void;
            texParameterf(target: number, pname: number, param: number): void;
            vertexAttrib3f(indx: number, x: number, y: number, z: number): void;
            drawArrays(mode: number, first: number, count: number): void;
            texParameteri(target: number, pname: number, param: number): void;
            vertexAttrib4f(indx: number, x: number, y: number, z: number, w: number): void;
            getShaderParameter(shader: WebGLShader, pname: number): any;
            clearDepth(depth: number): void;
            activeTexture(texture: number): void;
            detachShader(program: WebGLProgram, shader: WebGLShader): void;
            uniform1f(location: WebGLUniformLocation, x: number): void;
            uniformMatrix3fv(location: WebGLUniformLocation, transpose: boolean, value: number[]): void;
            uniformMatrix3fv(location: WebGLUniformLocation, transpose: boolean, value: Float32Array): void;
            deleteBuffer(buffer: WebGLBuffer): void;
            copyTexSubImage2D(target: number, level: number, xoffset: number, yoffset: number, x: number, y: number, width: number, height: number): void;
            uniform3fv(location: WebGLUniformLocation, v: number[]): void;
            uniform3fv(location: WebGLUniformLocation, v: Float32Array): void;
            stencilMaskSeparate(face: number, mask: number): void;
            attachShader(program: WebGLProgram, shader: WebGLShader): void;
            compileShader(shader: WebGLShader): void;
            clearColor(red: number, green: number, blue: number, alpha: number): void;
            isShader(shader: WebGLShader): boolean;
            clearStencil(s: number): void;
            framebufferRenderbuffer(target: number, attachment: number, renderbuffertarget: number, renderbuffer: WebGLRenderbuffer): void;
            finish(): void;
            uniform2f(location: WebGLUniformLocation, x: number, y: number): void;
            renderbufferStorage(target: number, internalformat: number, width: number, height: number): void;
            uniform3f(location: WebGLUniformLocation, x: number, y: number, z: number): void;
            getProgramInfoLog(program: WebGLProgram): string;
            validateProgram(program: WebGLProgram): void;
            isEnabled(cap: number): boolean;
            vertexAttrib2f(indx: number, x: number, y: number): void;
            isProgram(program: WebGLProgram): boolean;
            createShader(type: number): WebGLShader;
            bindRenderbuffer(target: number, renderbuffer: WebGLRenderbuffer): void;
            uniform4iv(location: WebGLUniformLocation, v: number[]): void;
            uniform4iv(location: WebGLUniformLocation, v: Int32Array): void;
            DEPTH_FUNC: number;
            DEPTH_COMPONENT16: number;
            REPLACE: number;
            REPEAT: number;
            VERTEX_ATTRIB_ARRAY_ENABLED: number;
            FRAMEBUFFER_INCOMPLETE_DIMENSIONS: number;
            STENCIL_BUFFER_BIT: number;
            RENDERER: number;
            STENCIL_BACK_REF: number;
            TEXTURE26: number;
            RGB565: number;
            DITHER: number;
            CONSTANT_COLOR: number;
            GENERATE_MIPMAP_HINT: number;
            POINTS: number;
            DECR: number;
            INT_VEC3: number;
            TEXTURE28: number;
            ONE_MINUS_CONSTANT_ALPHA: number;
            BACK: number;
            RENDERBUFFER_STENCIL_SIZE: number;
            UNPACK_FLIP_Y_WEBGL: number;
            BLEND: number;
            TEXTURE9: number;
            ARRAY_BUFFER_BINDING: number;
            MAX_VIEWPORT_DIMS: number;
            INVALID_FRAMEBUFFER_OPERATION: number;
            TEXTURE: number;
            TEXTURE0: number;
            TEXTURE31: number;
            TEXTURE24: number;
            HIGH_INT: number;
            RENDERBUFFER_BINDING: number;
            BLEND_COLOR: number;
            FASTEST: number;
            STENCIL_WRITEMASK: number;
            ALIASED_POINT_SIZE_RANGE: number;
            TEXTURE12: number;
            DST_ALPHA: number;
            BLEND_EQUATION_RGB: number;
            FRAMEBUFFER_COMPLETE: number;
            NEAREST_MIPMAP_NEAREST: number;
            VERTEX_ATTRIB_ARRAY_SIZE: number;
            TEXTURE3: number;
            DEPTH_WRITEMASK: number;
            CONTEXT_LOST_WEBGL: number;
            INVALID_VALUE: number;
            TEXTURE_MAG_FILTER: number;
            ONE_MINUS_CONSTANT_COLOR: number;
            ONE_MINUS_SRC_ALPHA: number;
            TEXTURE_CUBE_MAP_POSITIVE_Z: number;
            NOTEQUAL: number;
            ALPHA: number;
            DEPTH_STENCIL: number;
            MAX_VERTEX_UNIFORM_VECTORS: number;
            DEPTH_COMPONENT: number;
            RENDERBUFFER_RED_SIZE: number;
            TEXTURE20: number;
            RED_BITS: number;
            RENDERBUFFER_BLUE_SIZE: number;
            SCISSOR_BOX: number;
            VENDOR: number;
            FRONT_AND_BACK: number;
            CONSTANT_ALPHA: number;
            VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: number;
            NEAREST: number;
            CULL_FACE: number;
            ALIASED_LINE_WIDTH_RANGE: number;
            TEXTURE19: number;
            FRONT: number;
            DEPTH_CLEAR_VALUE: number;
            GREEN_BITS: number;
            TEXTURE29: number;
            TEXTURE23: number;
            MAX_RENDERBUFFER_SIZE: number;
            STENCIL_ATTACHMENT: number;
            TEXTURE27: number;
            BOOL_VEC2: number;
            OUT_OF_MEMORY: number;
            MIRRORED_REPEAT: number;
            POLYGON_OFFSET_UNITS: number;
            TEXTURE_MIN_FILTER: number;
            STENCIL_BACK_PASS_DEPTH_PASS: number;
            LINE_LOOP: number;
            FLOAT_MAT3: number;
            TEXTURE14: number;
            LINEAR: number;
            RGB5_A1: number;
            ONE_MINUS_SRC_COLOR: number;
            SAMPLE_COVERAGE_INVERT: number;
            DONT_CARE: number;
            FRAMEBUFFER_BINDING: number;
            RENDERBUFFER_ALPHA_SIZE: number;
            STENCIL_REF: number;
            ZERO: number;
            DECR_WRAP: number;
            SAMPLE_COVERAGE: number;
            STENCIL_BACK_FUNC: number;
            TEXTURE30: number;
            VIEWPORT: number;
            STENCIL_BITS: number;
            FLOAT: number;
            COLOR_WRITEMASK: number;
            SAMPLE_COVERAGE_VALUE: number;
            TEXTURE_CUBE_MAP_NEGATIVE_Y: number;
            STENCIL_BACK_FAIL: number;
            FLOAT_MAT4: number;
            UNSIGNED_SHORT_4_4_4_4: number;
            TEXTURE6: number;
            RENDERBUFFER_WIDTH: number;
            RGBA4: number;
            ALWAYS: number;
            BLEND_EQUATION_ALPHA: number;
            COLOR_BUFFER_BIT: number;
            TEXTURE_CUBE_MAP: number;
            DEPTH_BUFFER_BIT: number;
            STENCIL_CLEAR_VALUE: number;
            BLEND_EQUATION: number;
            RENDERBUFFER_GREEN_SIZE: number;
            NEAREST_MIPMAP_LINEAR: number;
            VERTEX_ATTRIB_ARRAY_TYPE: number;
            INCR_WRAP: number;
            ONE_MINUS_DST_COLOR: number;
            HIGH_FLOAT: number;
            BYTE: number;
            FRONT_FACE: number;
            SAMPLE_ALPHA_TO_COVERAGE: number;
            CCW: number;
            TEXTURE13: number;
            MAX_VERTEX_ATTRIBS: number;
            MAX_VERTEX_TEXTURE_IMAGE_UNITS: number;
            TEXTURE_WRAP_T: number;
            UNPACK_PREMULTIPLY_ALPHA_WEBGL: number;
            FLOAT_VEC2: number;
            LUMINANCE: number;
            GREATER: number;
            INT_VEC2: number;
            VALIDATE_STATUS: number;
            FRAMEBUFFER: number;
            FRAMEBUFFER_UNSUPPORTED: number;
            TEXTURE5: number;
            FUNC_SUBTRACT: number;
            BLEND_DST_ALPHA: number;
            SAMPLER_CUBE: number;
            ONE_MINUS_DST_ALPHA: number;
            LESS: number;
            TEXTURE_CUBE_MAP_POSITIVE_X: number;
            BLUE_BITS: number;
            DEPTH_TEST: number;
            VERTEX_ATTRIB_ARRAY_STRIDE: number;
            DELETE_STATUS: number;
            TEXTURE18: number;
            POLYGON_OFFSET_FACTOR: number;
            UNSIGNED_INT: number;
            TEXTURE_2D: number;
            DST_COLOR: number;
            FLOAT_MAT2: number;
            COMPRESSED_TEXTURE_FORMATS: number;
            MAX_FRAGMENT_UNIFORM_VECTORS: number;
            DEPTH_STENCIL_ATTACHMENT: number;
            LUMINANCE_ALPHA: number;
            CW: number;
            VERTEX_ATTRIB_ARRAY_NORMALIZED: number;
            TEXTURE_CUBE_MAP_NEGATIVE_Z: number;
            LINEAR_MIPMAP_LINEAR: number;
            BUFFER_SIZE: number;
            SAMPLE_BUFFERS: number;
            TEXTURE15: number;
            ACTIVE_TEXTURE: number;
            VERTEX_SHADER: number;
            TEXTURE22: number;
            VERTEX_ATTRIB_ARRAY_POINTER: number;
            INCR: number;
            COMPILE_STATUS: number;
            MAX_COMBINED_TEXTURE_IMAGE_UNITS: number;
            TEXTURE7: number;
            UNSIGNED_SHORT_5_5_5_1: number;
            DEPTH_BITS: number;
            RGBA: number;
            TRIANGLE_STRIP: number;
            COLOR_CLEAR_VALUE: number;
            BROWSER_DEFAULT_WEBGL: number;
            INVALID_ENUM: number;
            SCISSOR_TEST: number;
            LINE_STRIP: number;
            FRAMEBUFFER_INCOMPLETE_ATTACHMENT: number;
            STENCIL_FUNC: number;
            FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: number;
            RENDERBUFFER_HEIGHT: number;
            TEXTURE8: number;
            TRIANGLES: number;
            FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: number;
            STENCIL_BACK_VALUE_MASK: number;
            TEXTURE25: number;
            RENDERBUFFER: number;
            LEQUAL: number;
            TEXTURE1: number;
            STENCIL_INDEX8: number;
            FUNC_ADD: number;
            STENCIL_FAIL: number;
            BLEND_SRC_ALPHA: number;
            BOOL: number;
            ALPHA_BITS: number;
            LOW_INT: number;
            TEXTURE10: number;
            SRC_COLOR: number;
            MAX_VARYING_VECTORS: number;
            BLEND_DST_RGB: number;
            TEXTURE_BINDING_CUBE_MAP: number;
            STENCIL_INDEX: number;
            TEXTURE_BINDING_2D: number;
            MEDIUM_INT: number;
            SHADER_TYPE: number;
            POLYGON_OFFSET_FILL: number;
            DYNAMIC_DRAW: number;
            TEXTURE4: number;
            STENCIL_BACK_PASS_DEPTH_FAIL: number;
            STREAM_DRAW: number;
            MAX_CUBE_MAP_TEXTURE_SIZE: number;
            TEXTURE17: number;
            TRIANGLE_FAN: number;
            UNPACK_ALIGNMENT: number;
            CURRENT_PROGRAM: number;
            LINES: number;
            INVALID_OPERATION: number;
            FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: number;
            LINEAR_MIPMAP_NEAREST: number;
            CLAMP_TO_EDGE: number;
            RENDERBUFFER_DEPTH_SIZE: number;
            TEXTURE_WRAP_S: number;
            ELEMENT_ARRAY_BUFFER: number;
            UNSIGNED_SHORT_5_6_5: number;
            ACTIVE_UNIFORMS: number;
            FLOAT_VEC3: number;
            NO_ERROR: number;
            ATTACHED_SHADERS: number;
            DEPTH_ATTACHMENT: number;
            TEXTURE11: number;
            STENCIL_TEST: number;
            ONE: number;
            FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: number;
            STATIC_DRAW: number;
            GEQUAL: number;
            BOOL_VEC4: number;
            COLOR_ATTACHMENT0: number;
            PACK_ALIGNMENT: number;
            MAX_TEXTURE_SIZE: number;
            STENCIL_PASS_DEPTH_FAIL: number;
            CULL_FACE_MODE: number;
            TEXTURE16: number;
            STENCIL_BACK_WRITEMASK: number;
            SRC_ALPHA: number;
            UNSIGNED_SHORT: number;
            TEXTURE21: number;
            FUNC_REVERSE_SUBTRACT: number;
            SHADING_LANGUAGE_VERSION: number;
            EQUAL: number;
            FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: number;
            BOOL_VEC3: number;
            SAMPLER_2D: number;
            TEXTURE_CUBE_MAP_NEGATIVE_X: number;
            MAX_TEXTURE_IMAGE_UNITS: number;
            TEXTURE_CUBE_MAP_POSITIVE_Y: number;
            RENDERBUFFER_INTERNAL_FORMAT: number;
            STENCIL_VALUE_MASK: number;
            ELEMENT_ARRAY_BUFFER_BINDING: number;
            ARRAY_BUFFER: number;
            DEPTH_RANGE: number;
            NICEST: number;
            ACTIVE_ATTRIBUTES: number;
            NEVER: number;
            FLOAT_VEC4: number;
            CURRENT_VERTEX_ATTRIB: number;
            STENCIL_PASS_DEPTH_PASS: number;
            INVERT: number;
            LINK_STATUS: number;
            RGB: number;
            INT_VEC4: number;
            TEXTURE2: number;
            UNPACK_COLORSPACE_CONVERSION_WEBGL: number;
            MEDIUM_FLOAT: number;
            SRC_ALPHA_SATURATE: number;
            BUFFER_USAGE: number;
            SHORT: number;
            NONE: number;
            UNSIGNED_BYTE: number;
            INT: number;
            SUBPIXEL_BITS: number;
            KEEP: number;
            SAMPLES: number;
            FRAGMENT_SHADER: number;
            LINE_WIDTH: number;
            BLEND_SRC_RGB: number;
            LOW_FLOAT: number;
            VERSION: number;
            static DEPTH_FUNC: number;
            static DEPTH_COMPONENT16: number;
            static REPLACE: number;
            static REPEAT: number;
            static VERTEX_ATTRIB_ARRAY_ENABLED: number;
            static FRAMEBUFFER_INCOMPLETE_DIMENSIONS: number;
            static STENCIL_BUFFER_BIT: number;
            static RENDERER: number;
            static STENCIL_BACK_REF: number;
            static TEXTURE26: number;
            static RGB565: number;
            static DITHER: number;
            static CONSTANT_COLOR: number;
            static GENERATE_MIPMAP_HINT: number;
            static POINTS: number;
            static DECR: number;
            static INT_VEC3: number;
            static TEXTURE28: number;
            static ONE_MINUS_CONSTANT_ALPHA: number;
            static BACK: number;
            static RENDERBUFFER_STENCIL_SIZE: number;
            static UNPACK_FLIP_Y_WEBGL: number;
            static BLEND: number;
            static TEXTURE9: number;
            static ARRAY_BUFFER_BINDING: number;
            static MAX_VIEWPORT_DIMS: number;
            static INVALID_FRAMEBUFFER_OPERATION: number;
            static TEXTURE: number;
            static TEXTURE0: number;
            static TEXTURE31: number;
            static TEXTURE24: number;
            static HIGH_INT: number;
            static RENDERBUFFER_BINDING: number;
            static BLEND_COLOR: number;
            static FASTEST: number;
            static STENCIL_WRITEMASK: number;
            static ALIASED_POINT_SIZE_RANGE: number;
            static TEXTURE12: number;
            static DST_ALPHA: number;
            static BLEND_EQUATION_RGB: number;
            static FRAMEBUFFER_COMPLETE: number;
            static NEAREST_MIPMAP_NEAREST: number;
            static VERTEX_ATTRIB_ARRAY_SIZE: number;
            static TEXTURE3: number;
            static DEPTH_WRITEMASK: number;
            static CONTEXT_LOST_WEBGL: number;
            static INVALID_VALUE: number;
            static TEXTURE_MAG_FILTER: number;
            static ONE_MINUS_CONSTANT_COLOR: number;
            static ONE_MINUS_SRC_ALPHA: number;
            static TEXTURE_CUBE_MAP_POSITIVE_Z: number;
            static NOTEQUAL: number;
            static ALPHA: number;
            static DEPTH_STENCIL: number;
            static MAX_VERTEX_UNIFORM_VECTORS: number;
            static DEPTH_COMPONENT: number;
            static RENDERBUFFER_RED_SIZE: number;
            static TEXTURE20: number;
            static RED_BITS: number;
            static RENDERBUFFER_BLUE_SIZE: number;
            static SCISSOR_BOX: number;
            static VENDOR: number;
            static FRONT_AND_BACK: number;
            static CONSTANT_ALPHA: number;
            static VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: number;
            static NEAREST: number;
            static CULL_FACE: number;
            static ALIASED_LINE_WIDTH_RANGE: number;
            static TEXTURE19: number;
            static FRONT: number;
            static DEPTH_CLEAR_VALUE: number;
            static GREEN_BITS: number;
            static TEXTURE29: number;
            static TEXTURE23: number;
            static MAX_RENDERBUFFER_SIZE: number;
            static STENCIL_ATTACHMENT: number;
            static TEXTURE27: number;
            static BOOL_VEC2: number;
            static OUT_OF_MEMORY: number;
            static MIRRORED_REPEAT: number;
            static POLYGON_OFFSET_UNITS: number;
            static TEXTURE_MIN_FILTER: number;
            static STENCIL_BACK_PASS_DEPTH_PASS: number;
            static LINE_LOOP: number;
            static FLOAT_MAT3: number;
            static TEXTURE14: number;
            static LINEAR: number;
            static RGB5_A1: number;
            static ONE_MINUS_SRC_COLOR: number;
            static SAMPLE_COVERAGE_INVERT: number;
            static DONT_CARE: number;
            static FRAMEBUFFER_BINDING: number;
            static RENDERBUFFER_ALPHA_SIZE: number;
            static STENCIL_REF: number;
            static ZERO: number;
            static DECR_WRAP: number;
            static SAMPLE_COVERAGE: number;
            static STENCIL_BACK_FUNC: number;
            static TEXTURE30: number;
            static VIEWPORT: number;
            static STENCIL_BITS: number;
            static FLOAT: number;
            static COLOR_WRITEMASK: number;
            static SAMPLE_COVERAGE_VALUE: number;
            static TEXTURE_CUBE_MAP_NEGATIVE_Y: number;
            static STENCIL_BACK_FAIL: number;
            static FLOAT_MAT4: number;
            static UNSIGNED_SHORT_4_4_4_4: number;
            static TEXTURE6: number;
            static RENDERBUFFER_WIDTH: number;
            static RGBA4: number;
            static ALWAYS: number;
            static BLEND_EQUATION_ALPHA: number;
            static COLOR_BUFFER_BIT: number;
            static TEXTURE_CUBE_MAP: number;
            static DEPTH_BUFFER_BIT: number;
            static STENCIL_CLEAR_VALUE: number;
            static BLEND_EQUATION: number;
            static RENDERBUFFER_GREEN_SIZE: number;
            static NEAREST_MIPMAP_LINEAR: number;
            static VERTEX_ATTRIB_ARRAY_TYPE: number;
            static INCR_WRAP: number;
            static ONE_MINUS_DST_COLOR: number;
            static HIGH_FLOAT: number;
            static BYTE: number;
            static FRONT_FACE: number;
            static SAMPLE_ALPHA_TO_COVERAGE: number;
            static CCW: number;
            static TEXTURE13: number;
            static MAX_VERTEX_ATTRIBS: number;
            static MAX_VERTEX_TEXTURE_IMAGE_UNITS: number;
            static TEXTURE_WRAP_T: number;
            static UNPACK_PREMULTIPLY_ALPHA_WEBGL: number;
            static FLOAT_VEC2: number;
            static LUMINANCE: number;
            static GREATER: number;
            static INT_VEC2: number;
            static VALIDATE_STATUS: number;
            static FRAMEBUFFER: number;
            static FRAMEBUFFER_UNSUPPORTED: number;
            static TEXTURE5: number;
            static FUNC_SUBTRACT: number;
            static BLEND_DST_ALPHA: number;
            static SAMPLER_CUBE: number;
            static ONE_MINUS_DST_ALPHA: number;
            static LESS: number;
            static TEXTURE_CUBE_MAP_POSITIVE_X: number;
            static BLUE_BITS: number;
            static DEPTH_TEST: number;
            static VERTEX_ATTRIB_ARRAY_STRIDE: number;
            static DELETE_STATUS: number;
            static TEXTURE18: number;
            static POLYGON_OFFSET_FACTOR: number;
            static UNSIGNED_INT: number;
            static TEXTURE_2D: number;
            static DST_COLOR: number;
            static FLOAT_MAT2: number;
            static COMPRESSED_TEXTURE_FORMATS: number;
            static MAX_FRAGMENT_UNIFORM_VECTORS: number;
            static DEPTH_STENCIL_ATTACHMENT: number;
            static LUMINANCE_ALPHA: number;
            static CW: number;
            static VERTEX_ATTRIB_ARRAY_NORMALIZED: number;
            static TEXTURE_CUBE_MAP_NEGATIVE_Z: number;
            static LINEAR_MIPMAP_LINEAR: number;
            static BUFFER_SIZE: number;
            static SAMPLE_BUFFERS: number;
            static TEXTURE15: number;
            static ACTIVE_TEXTURE: number;
            static VERTEX_SHADER: number;
            static TEXTURE22: number;
            static VERTEX_ATTRIB_ARRAY_POINTER: number;
            static INCR: number;
            static COMPILE_STATUS: number;
            static MAX_COMBINED_TEXTURE_IMAGE_UNITS: number;
            static TEXTURE7: number;
            static UNSIGNED_SHORT_5_5_5_1: number;
            static DEPTH_BITS: number;
            static RGBA: number;
            static TRIANGLE_STRIP: number;
            static COLOR_CLEAR_VALUE: number;
            static BROWSER_DEFAULT_WEBGL: number;
            static INVALID_ENUM: number;
            static SCISSOR_TEST: number;
            static LINE_STRIP: number;
            static FRAMEBUFFER_INCOMPLETE_ATTACHMENT: number;
            static STENCIL_FUNC: number;
            static FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: number;
            static RENDERBUFFER_HEIGHT: number;
            static TEXTURE8: number;
            static TRIANGLES: number;
            static FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: number;
            static STENCIL_BACK_VALUE_MASK: number;
            static TEXTURE25: number;
            static RENDERBUFFER: number;
            static LEQUAL: number;
            static TEXTURE1: number;
            static STENCIL_INDEX8: number;
            static FUNC_ADD: number;
            static STENCIL_FAIL: number;
            static BLEND_SRC_ALPHA: number;
            static BOOL: number;
            static ALPHA_BITS: number;
            static LOW_INT: number;
            static TEXTURE10: number;
            static SRC_COLOR: number;
            static MAX_VARYING_VECTORS: number;
            static BLEND_DST_RGB: number;
            static TEXTURE_BINDING_CUBE_MAP: number;
            static STENCIL_INDEX: number;
            static TEXTURE_BINDING_2D: number;
            static MEDIUM_INT: number;
            static SHADER_TYPE: number;
            static POLYGON_OFFSET_FILL: number;
            static DYNAMIC_DRAW: number;
            static TEXTURE4: number;
            static STENCIL_BACK_PASS_DEPTH_FAIL: number;
            static STREAM_DRAW: number;
            static MAX_CUBE_MAP_TEXTURE_SIZE: number;
            static TEXTURE17: number;
            static TRIANGLE_FAN: number;
            static UNPACK_ALIGNMENT: number;
            static CURRENT_PROGRAM: number;
            static LINES: number;
            static INVALID_OPERATION: number;
            static FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: number;
            static LINEAR_MIPMAP_NEAREST: number;
            static CLAMP_TO_EDGE: number;
            static RENDERBUFFER_DEPTH_SIZE: number;
            static TEXTURE_WRAP_S: number;
            static ELEMENT_ARRAY_BUFFER: number;
            static UNSIGNED_SHORT_5_6_5: number;
            static ACTIVE_UNIFORMS: number;
            static FLOAT_VEC3: number;
            static NO_ERROR: number;
            static ATTACHED_SHADERS: number;
            static DEPTH_ATTACHMENT: number;
            static TEXTURE11: number;
            static STENCIL_TEST: number;
            static ONE: number;
            static FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: number;
            static STATIC_DRAW: number;
            static GEQUAL: number;
            static BOOL_VEC4: number;
            static COLOR_ATTACHMENT0: number;
            static PACK_ALIGNMENT: number;
            static MAX_TEXTURE_SIZE: number;
            static STENCIL_PASS_DEPTH_FAIL: number;
            static CULL_FACE_MODE: number;
            static TEXTURE16: number;
            static STENCIL_BACK_WRITEMASK: number;
            static SRC_ALPHA: number;
            static UNSIGNED_SHORT: number;
            static TEXTURE21: number;
            static FUNC_REVERSE_SUBTRACT: number;
            static SHADING_LANGUAGE_VERSION: number;
            static EQUAL: number;
            static FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: number;
            static BOOL_VEC3: number;
            static SAMPLER_2D: number;
            static TEXTURE_CUBE_MAP_NEGATIVE_X: number;
            static MAX_TEXTURE_IMAGE_UNITS: number;
            static TEXTURE_CUBE_MAP_POSITIVE_Y: number;
            static RENDERBUFFER_INTERNAL_FORMAT: number;
            static STENCIL_VALUE_MASK: number;
            static ELEMENT_ARRAY_BUFFER_BINDING: number;
            static ARRAY_BUFFER: number;
            static DEPTH_RANGE: number;
            static NICEST: number;
            static ACTIVE_ATTRIBUTES: number;
            static NEVER: number;
            static FLOAT_VEC4: number;
            static CURRENT_VERTEX_ATTRIB: number;
            static STENCIL_PASS_DEPTH_PASS: number;
            static INVERT: number;
            static LINK_STATUS: number;
            static RGB: number;
            static INT_VEC4: number;
            static TEXTURE2: number;
            static UNPACK_COLORSPACE_CONVERSION_WEBGL: number;
            static MEDIUM_FLOAT: number;
            static SRC_ALPHA_SATURATE: number;
            static BUFFER_USAGE: number;
            static SHORT: number;
            static NONE: number;
            static UNSIGNED_BYTE: number;
            static INT: number;
            static SUBPIXEL_BITS: number;
            static KEEP: number;
            static SAMPLES: number;
            static FRAGMENT_SHADER: number;
            static LINE_WIDTH: number;
            static BLEND_SRC_RGB: number;
            static LOW_FLOAT: number;
            static VERSION: number;
        }
        class Canvas extends Element implements IHTMLCanvasElement {
            /**
              * Gets or sets the width of a canvas element on a document.
              */
            width: number;
            /**
              * Gets or sets the height of a canvas element on a document.
              */
            height: number;
            /**
              * Returns the content of the current canvas as an image that you can use as a source for another canvas or an HTML element.
              * @param type The standard MIME type for the image format to return. If you do not specify this parameter, the default value is a PNG format image.
              */
            toDataURL(type?: string, ...args: any[]): string;
            /**
              * Returns an object that provides methods and properties for drawing and manipulating images and graphics on a canvas element in a document. A context object includes information about colors, line widths, fonts, and other graphic parameters that can be drawn on a canvas.
              * @param contextId The identifier (ID) of the type of canvas to create. Internet Explorer 9 and Internet Explorer 10 support only a 2-D context using canvas.getContext("2d"); IE11 Preview also supports 3-D or WebGL context using canvas.getContext("experimental-webgl");
              */
            getContext(contextId: "2d"): ICanvasRenderingContext2D;
            getContext(contextId: "experimental-webgl"): IWebGLRenderingContext;
            getContext(contextId: string, ...args: any[]): any;
            /**
              * Returns a blob object encoded as a Portable Network Graphics (PNG) format from a canvas image or drawing.
              */
            msToBlob(): Blob;
        }
    }
}
